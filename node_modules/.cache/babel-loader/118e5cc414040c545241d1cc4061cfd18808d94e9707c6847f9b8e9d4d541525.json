{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AjaikumarN\\\\Documents\\\\website\\\\my-react-app\\\\src\\\\authenticationFiles\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../cssFiles/login.css\";\nimport img from \"../images/signUp.png\";\nimport { Input } from \"../elementFiles/Input\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"../elementFiles/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = ({\n  onChange\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const register = e => {\n    e.preventDefault();\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setErrorMessage(\"Please enter a valid email address.\");\n      return;\n    }\n    const newUser = {\n      userId: Date.now(),\n      name: name,\n      email: email,\n      password: password,\n      userType: userType,\n      createdDate: new Date().toISOString().slice(0, 10)\n    };\n    try {\n      const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n      const isDuplicate = existingUsers.some(user => user.email === newUser.email);\n      if (isDuplicate) {\n        setErrorMessage(\"This email address is already registered.\");\n        return;\n      }\n      existingUsers.push(newUser);\n      localStorage.setItem(\"users\", JSON.stringify(existingUsers));\n      setRegistrationSuccess(true);\n      setErrorMessage(\"\");\n      console.log(\"User Registered:\", newUser);\n      navigate(\"/login\");\n    } catch (error) {\n      setErrorMessage(\"Registration failed. Please try again.\");\n      console.error(\"Error during registration:\", error);\n    }\n  };\n  const InputWithSelect = ({\n    labelName,\n    value,\n    onChange,\n    options\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: labelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => onChange(e.target.value),\n        placeholder: \"Select...\",\n        readOnly: true // Prevents direct input into the text field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-option\",\n          onClick: () => onChange(option.value),\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  const handlePageChange = () => {\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"sign-up-image\",\n      src: img,\n      alt: \"sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: register,\n      children: [registrationSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: \"Registration successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input-field\",\n        labelName: \"Name\",\n        inputType: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input-field\",\n        labelName: \"Email\",\n        inputType: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input-field\",\n        labelName: \"Password\",\n        inputType: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWithSelect, {\n        className: \"input-field\",\n        labelName: \"Role\",\n        inputType: \"text\",\n        value: userType,\n        onChange: e => setUserType(e.target.value),\n        options: [{\n          value: \"customer\",\n          label: \"Customer\"\n        }, {\n          value: \"farmer\",\n          label: \"Farmer\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-button\",\n        type: \"submit\",\n        value: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        value: \"Login\",\n        onClick: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"s+ohL5Z+6NFWB/iUtYpoDgEziuk=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","img","Input","useNavigate","Button","jsxDEV","_jsxDEV","SignUp","onChange","_s","name","setName","email","setEmail","password","setPassword","userType","setUserType","registrationSuccess","setRegistrationSuccess","errorMessage","setErrorMessage","navigate","register","e","preventDefault","emailRegex","test","newUser","userId","Date","now","createdDate","toISOString","slice","existingUsers","JSON","parse","localStorage","getItem","isDuplicate","some","user","push","setItem","stringify","console","log","error","InputWithSelect","labelName","value","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","target","placeholder","readOnly","map","option","onClick","label","handlePageChange","src","alt","onSubmit","inputType","_c","$RefreshReg$"],"sources":["C:/Users/AjaikumarN/Documents/website/my-react-app/src/authenticationFiles/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../cssFiles/login.css\";\r\nimport img from \"../images/signUp.png\";\r\nimport { Input } from \"../elementFiles/Input\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"../elementFiles/Button\";\r\n\r\nconst SignUp = ({ onChange }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"\");\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setErrorMessage(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      userId: Date.now(),\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      userType: userType,\r\n      createdDate: new Date().toISOString().slice(0, 10),\r\n    };\r\n\r\n    try {\r\n      const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n      const isDuplicate = existingUsers.some(\r\n        (user) => user.email === newUser.email\r\n      );\r\n\r\n      if (isDuplicate) {\r\n        setErrorMessage(\"This email address is already registered.\");\r\n        return;\r\n      }\r\n\r\n      existingUsers.push(newUser);\r\n      localStorage.setItem(\"users\", JSON.stringify(existingUsers));\r\n      setRegistrationSuccess(true);\r\n      setErrorMessage(\"\");\r\n      console.log(\"User Registered:\", newUser);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setErrorMessage(\"Registration failed. Please try again.\");\r\n      console.error(\"Error during registration:\", error);\r\n    }\r\n  };\r\n\r\n  const InputWithSelect = ({ labelName, value, onChange, options }) => (\r\n    <div className=\"input-field\">\r\n      <label>{labelName}</label>\r\n      <div className=\"custom-dropdown\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          placeholder=\"Select...\"\r\n          readOnly // Prevents direct input into the text field\r\n        />\r\n        <div className=\"dropdown-arrow\">&#9660;</div>\r\n        <div className=\"dropdown-content\">\r\n          {options.map((option) => (\r\n            <div\r\n              key={option.value}\r\n              className=\"dropdown-option\"\r\n              onClick={() => onChange(option.value)}\r\n            >\r\n              {option.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handlePageChange = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up-container\">\r\n      <img className=\"sign-up-image\" src={img} alt=\"sign up\" />\r\n      <form className=\"sign-up-form\" onSubmit={register}>\r\n        {registrationSuccess && (\r\n          <p className=\"success-message\">Registration successful!</p>\r\n        )}\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <Input\r\n          className=\"input-field\"\r\n          labelName=\"Name\"\r\n          inputType=\"text\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          className=\"input-field\"\r\n          labelName=\"Email\"\r\n          inputType=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <Input\r\n          className=\"input-field\"\r\n          labelName=\"Password\"\r\n          inputType=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <InputWithSelect\r\n          className=\"input-field\"\r\n          labelName=\"Role\"\r\n          inputType=\"text\"\r\n          value={userType}\r\n          onChange={(e) => setUserType(e.target.value)}\r\n          options={[\r\n            { value: \"customer\", label: \"Customer\" },\r\n            { value: \"farmer\", label: \"Farmer\" },\r\n          ]}\r\n        />\r\n\r\n        {/* <label>\r\n          User Type:\r\n          <select\r\n            value={userType}\r\n            onChange={(e) => setUserType(e.target.value)}\r\n          >\r\n            <option value=\"\">Select...</option>\r\n            <option value=\"customer\">Customer</option>\r\n            <option value=\"farmer\">Farmer</option>\r\n          </select>\r\n        </label> */}\r\n        <Button className=\"submit-button\" type=\"submit\" value=\"Register Now\" />\r\n        <Button type=\"submit\" value=\"Login\" onClick={handlePageChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMsB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAMoB,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACf,KAAK,CAAC,EAAE;MAC3BS,eAAe,CAAC,qCAAqC,CAAC;MACtD;IACF;IAEA,MAAMO,OAAO,GAAG;MACdC,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAClBrB,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA,QAAQ;MAClBgB,WAAW,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;IACnD,CAAC;IAED,IAAI;MACF,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MACrE,MAAMC,WAAW,GAAGL,aAAa,CAACM,IAAI,CACnCC,IAAI,IAAKA,IAAI,CAAC9B,KAAK,KAAKgB,OAAO,CAAChB,KACnC,CAAC;MAED,IAAI4B,WAAW,EAAE;QACfnB,eAAe,CAAC,2CAA2C,CAAC;QAC5D;MACF;MAEAc,aAAa,CAACQ,IAAI,CAACf,OAAO,CAAC;MAC3BU,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACV,aAAa,CAAC,CAAC;MAC5DhB,sBAAsB,CAAC,IAAI,CAAC;MAC5BE,eAAe,CAAC,EAAE,CAAC;MACnByB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEnB,OAAO,CAAC;MACxCN,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACd3B,eAAe,CAAC,wCAAwC,CAAC;MACzDyB,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAC;IAAEC,SAAS;IAAEC,KAAK;IAAE3C,QAAQ;IAAE4C;EAAQ,CAAC,kBAC9D9C,OAAA;IAAK+C,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BhD,OAAA;MAAAgD,QAAA,EAAQJ;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1BpD,OAAA;MAAK+C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhD,OAAA;QACEqD,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEA,KAAM;QACb3C,QAAQ,EAAGgB,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACoC,MAAM,CAACT,KAAK,CAAE;QAC1CU,WAAW,EAAC,WAAW;QACvBC,QAAQ,OAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFpD,OAAA;QAAK+C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CpD,OAAA;QAAK+C,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BF,OAAO,CAACW,GAAG,CAAEC,MAAM,iBAClB1D,OAAA;UAEE+C,SAAS,EAAC,iBAAiB;UAC3BY,OAAO,EAAEA,CAAA,KAAMzD,QAAQ,CAACwD,MAAM,CAACb,KAAK,CAAE;UAAAG,QAAA,EAErCU,MAAM,CAACE;QAAK,GAJRF,MAAM,CAACb,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7C,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEhB,OAAA;IAAK+C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChD,OAAA;MAAK+C,SAAS,EAAC,eAAe;MAACe,GAAG,EAAEnE,GAAI;MAACoE,GAAG,EAAC;IAAS;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDpD,OAAA;MAAM+C,SAAS,EAAC,cAAc;MAACiB,QAAQ,EAAE/C,QAAS;MAAA+B,QAAA,GAC/CpC,mBAAmB,iBAClBZ,OAAA;QAAG+C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3D,EACAtC,YAAY,iBAAId,OAAA;QAAG+C,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAElC;MAAY;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChEpD,OAAA,CAACJ,KAAK;QACJmD,SAAS,EAAC,aAAa;QACvBH,SAAS,EAAC,MAAM;QAChBqB,SAAS,EAAC,MAAM;QAChB/D,QAAQ,EAAGgB,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACoC,MAAM,CAACT,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFpD,OAAA,CAACJ,KAAK;QACJmD,SAAS,EAAC,aAAa;QACvBH,SAAS,EAAC,OAAO;QACjBqB,SAAS,EAAC,OAAO;QACjB/D,QAAQ,EAAGgB,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACoC,MAAM,CAACT,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFpD,OAAA,CAACJ,KAAK;QACJmD,SAAS,EAAC,aAAa;QACvBH,SAAS,EAAC,UAAU;QACpBqB,SAAS,EAAC,UAAU;QACpB/D,QAAQ,EAAGgB,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACoC,MAAM,CAACT,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFpD,OAAA,CAAC2C,eAAe;QACdI,SAAS,EAAC,aAAa;QACvBH,SAAS,EAAC,MAAM;QAChBqB,SAAS,EAAC,MAAM;QAChBpB,KAAK,EAAEnC,QAAS;QAChBR,QAAQ,EAAGgB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACoC,MAAM,CAACT,KAAK,CAAE;QAC7CC,OAAO,EAAE,CACP;UAAED,KAAK,EAAE,UAAU;UAAEe,KAAK,EAAE;QAAW,CAAC,EACxC;UAAEf,KAAK,EAAE,QAAQ;UAAEe,KAAK,EAAE;QAAS,CAAC;MACpC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAaFpD,OAAA,CAACF,MAAM;QAACiD,SAAS,EAAC,eAAe;QAACM,IAAI,EAAC,QAAQ;QAACR,KAAK,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEpD,OAAA,CAACF,MAAM;QAACuD,IAAI,EAAC,QAAQ;QAACR,KAAK,EAAC,OAAO;QAACc,OAAO,EAAEE;MAAiB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjD,EAAA,CAvIIF,MAAM;EAAA,QAOOJ,WAAW;AAAA;AAAAqE,EAAA,GAPxBjE,MAAM;AAyIZ,eAAeA,MAAM;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}